// Generated by view binder compiler. Do not edit!
package com.mafi.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import android.widget.VideoView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.mafi.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogContentDetailsBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button buttonClose;

  @NonNull
  public final Button buttonDelete;

  @NonNull
  public final Button buttonEdit;

  @NonNull
  public final ImageButton buttonPlayPause;

  @NonNull
  public final Button buttonShare;

  @NonNull
  public final FrameLayout frameMediaContainer;

  @NonNull
  public final ImageView imageContent;

  @NonNull
  public final ImageView imageContentType;

  @NonNull
  public final LinearLayout layoutActions;

  @NonNull
  public final LinearLayout layoutAudioControls;

  @NonNull
  public final SeekBar seekBarAudio;

  @NonNull
  public final TextView textAudioDuration;

  @NonNull
  public final TextView textContentDate;

  @NonNull
  public final TextView textContentDescription;

  @NonNull
  public final TextView textContentDescriptionLabel;

  @NonNull
  public final TextView textContentTitle;

  @NonNull
  public final TextView textContentUrl;

  @NonNull
  public final TextView textContentUrlLabel;

  @NonNull
  public final VideoView videoContent;

  @NonNull
  public final View viewDividerBottom;

  @NonNull
  public final View viewDividerTop;

  private DialogContentDetailsBinding(@NonNull CardView rootView, @NonNull Button buttonClose,
      @NonNull Button buttonDelete, @NonNull Button buttonEdit,
      @NonNull ImageButton buttonPlayPause, @NonNull Button buttonShare,
      @NonNull FrameLayout frameMediaContainer, @NonNull ImageView imageContent,
      @NonNull ImageView imageContentType, @NonNull LinearLayout layoutActions,
      @NonNull LinearLayout layoutAudioControls, @NonNull SeekBar seekBarAudio,
      @NonNull TextView textAudioDuration, @NonNull TextView textContentDate,
      @NonNull TextView textContentDescription, @NonNull TextView textContentDescriptionLabel,
      @NonNull TextView textContentTitle, @NonNull TextView textContentUrl,
      @NonNull TextView textContentUrlLabel, @NonNull VideoView videoContent,
      @NonNull View viewDividerBottom, @NonNull View viewDividerTop) {
    this.rootView = rootView;
    this.buttonClose = buttonClose;
    this.buttonDelete = buttonDelete;
    this.buttonEdit = buttonEdit;
    this.buttonPlayPause = buttonPlayPause;
    this.buttonShare = buttonShare;
    this.frameMediaContainer = frameMediaContainer;
    this.imageContent = imageContent;
    this.imageContentType = imageContentType;
    this.layoutActions = layoutActions;
    this.layoutAudioControls = layoutAudioControls;
    this.seekBarAudio = seekBarAudio;
    this.textAudioDuration = textAudioDuration;
    this.textContentDate = textContentDate;
    this.textContentDescription = textContentDescription;
    this.textContentDescriptionLabel = textContentDescriptionLabel;
    this.textContentTitle = textContentTitle;
    this.textContentUrl = textContentUrl;
    this.textContentUrlLabel = textContentUrlLabel;
    this.videoContent = videoContent;
    this.viewDividerBottom = viewDividerBottom;
    this.viewDividerTop = viewDividerTop;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogContentDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogContentDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_content_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogContentDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_close;
      Button buttonClose = ViewBindings.findChildViewById(rootView, id);
      if (buttonClose == null) {
        break missingId;
      }

      id = R.id.button_delete;
      Button buttonDelete = ViewBindings.findChildViewById(rootView, id);
      if (buttonDelete == null) {
        break missingId;
      }

      id = R.id.button_edit;
      Button buttonEdit = ViewBindings.findChildViewById(rootView, id);
      if (buttonEdit == null) {
        break missingId;
      }

      id = R.id.button_play_pause;
      ImageButton buttonPlayPause = ViewBindings.findChildViewById(rootView, id);
      if (buttonPlayPause == null) {
        break missingId;
      }

      id = R.id.button_share;
      Button buttonShare = ViewBindings.findChildViewById(rootView, id);
      if (buttonShare == null) {
        break missingId;
      }

      id = R.id.frame_media_container;
      FrameLayout frameMediaContainer = ViewBindings.findChildViewById(rootView, id);
      if (frameMediaContainer == null) {
        break missingId;
      }

      id = R.id.image_content;
      ImageView imageContent = ViewBindings.findChildViewById(rootView, id);
      if (imageContent == null) {
        break missingId;
      }

      id = R.id.image_content_type;
      ImageView imageContentType = ViewBindings.findChildViewById(rootView, id);
      if (imageContentType == null) {
        break missingId;
      }

      id = R.id.layout_actions;
      LinearLayout layoutActions = ViewBindings.findChildViewById(rootView, id);
      if (layoutActions == null) {
        break missingId;
      }

      id = R.id.layout_audio_controls;
      LinearLayout layoutAudioControls = ViewBindings.findChildViewById(rootView, id);
      if (layoutAudioControls == null) {
        break missingId;
      }

      id = R.id.seek_bar_audio;
      SeekBar seekBarAudio = ViewBindings.findChildViewById(rootView, id);
      if (seekBarAudio == null) {
        break missingId;
      }

      id = R.id.text_audio_duration;
      TextView textAudioDuration = ViewBindings.findChildViewById(rootView, id);
      if (textAudioDuration == null) {
        break missingId;
      }

      id = R.id.text_content_date;
      TextView textContentDate = ViewBindings.findChildViewById(rootView, id);
      if (textContentDate == null) {
        break missingId;
      }

      id = R.id.text_content_description;
      TextView textContentDescription = ViewBindings.findChildViewById(rootView, id);
      if (textContentDescription == null) {
        break missingId;
      }

      id = R.id.text_content_description_label;
      TextView textContentDescriptionLabel = ViewBindings.findChildViewById(rootView, id);
      if (textContentDescriptionLabel == null) {
        break missingId;
      }

      id = R.id.text_content_title;
      TextView textContentTitle = ViewBindings.findChildViewById(rootView, id);
      if (textContentTitle == null) {
        break missingId;
      }

      id = R.id.text_content_url;
      TextView textContentUrl = ViewBindings.findChildViewById(rootView, id);
      if (textContentUrl == null) {
        break missingId;
      }

      id = R.id.text_content_url_label;
      TextView textContentUrlLabel = ViewBindings.findChildViewById(rootView, id);
      if (textContentUrlLabel == null) {
        break missingId;
      }

      id = R.id.video_content;
      VideoView videoContent = ViewBindings.findChildViewById(rootView, id);
      if (videoContent == null) {
        break missingId;
      }

      id = R.id.view_divider_bottom;
      View viewDividerBottom = ViewBindings.findChildViewById(rootView, id);
      if (viewDividerBottom == null) {
        break missingId;
      }

      id = R.id.view_divider_top;
      View viewDividerTop = ViewBindings.findChildViewById(rootView, id);
      if (viewDividerTop == null) {
        break missingId;
      }

      return new DialogContentDetailsBinding((CardView) rootView, buttonClose, buttonDelete,
          buttonEdit, buttonPlayPause, buttonShare, frameMediaContainer, imageContent,
          imageContentType, layoutActions, layoutAudioControls, seekBarAudio, textAudioDuration,
          textContentDate, textContentDescription, textContentDescriptionLabel, textContentTitle,
          textContentUrl, textContentUrlLabel, videoContent, viewDividerBottom, viewDividerTop);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
