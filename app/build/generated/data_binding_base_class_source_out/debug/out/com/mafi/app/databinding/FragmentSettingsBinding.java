// Generated by view binder compiler. Do not edit!
package com.mafi.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.radiobutton.MaterialRadioButton;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.google.android.material.textfield.TextInputLayout;
import com.mafi.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final AutoCompleteTextView autoCompleteAiModel;

  @NonNull
  public final MaterialButton buttonRetryModels;

  @NonNull
  public final MaterialCardView cardAbout;

  @NonNull
  public final MaterialCardView cardAiModel;

  @NonNull
  public final MaterialCardView cardNotifications;

  @NonNull
  public final MaterialCardView cardTheme;

  @NonNull
  public final ImageView imageViewLogo;

  @NonNull
  public final ProgressBar progressBarModels;

  @NonNull
  public final MaterialRadioButton radioButtonDark;

  @NonNull
  public final MaterialRadioButton radioButtonLight;

  @NonNull
  public final MaterialRadioButton radioButtonSystem;

  @NonNull
  public final RadioGroup radioGroupTheme;

  @NonNull
  public final SwitchMaterial switchNotification;

  @NonNull
  public final TextInputLayout textInputAiModel;

  @NonNull
  public final TextView textViewAbout;

  @NonNull
  public final TextView textViewAiModel;

  @NonNull
  public final TextView textViewAiModelDescription;

  @NonNull
  public final TextView textViewAppInfo;

  @NonNull
  public final TextView textViewErrorModels;

  @NonNull
  public final TextView textViewNotifications;

  @NonNull
  public final TextView textViewNotificationsDescription;

  @NonNull
  public final TextView textViewSettingsTitle;

  @NonNull
  public final TextView textViewTheme;

  @NonNull
  public final TextView textViewThemeDescription;

  private FragmentSettingsBinding(@NonNull NestedScrollView rootView,
      @NonNull AutoCompleteTextView autoCompleteAiModel, @NonNull MaterialButton buttonRetryModels,
      @NonNull MaterialCardView cardAbout, @NonNull MaterialCardView cardAiModel,
      @NonNull MaterialCardView cardNotifications, @NonNull MaterialCardView cardTheme,
      @NonNull ImageView imageViewLogo, @NonNull ProgressBar progressBarModels,
      @NonNull MaterialRadioButton radioButtonDark, @NonNull MaterialRadioButton radioButtonLight,
      @NonNull MaterialRadioButton radioButtonSystem, @NonNull RadioGroup radioGroupTheme,
      @NonNull SwitchMaterial switchNotification, @NonNull TextInputLayout textInputAiModel,
      @NonNull TextView textViewAbout, @NonNull TextView textViewAiModel,
      @NonNull TextView textViewAiModelDescription, @NonNull TextView textViewAppInfo,
      @NonNull TextView textViewErrorModels, @NonNull TextView textViewNotifications,
      @NonNull TextView textViewNotificationsDescription, @NonNull TextView textViewSettingsTitle,
      @NonNull TextView textViewTheme, @NonNull TextView textViewThemeDescription) {
    this.rootView = rootView;
    this.autoCompleteAiModel = autoCompleteAiModel;
    this.buttonRetryModels = buttonRetryModels;
    this.cardAbout = cardAbout;
    this.cardAiModel = cardAiModel;
    this.cardNotifications = cardNotifications;
    this.cardTheme = cardTheme;
    this.imageViewLogo = imageViewLogo;
    this.progressBarModels = progressBarModels;
    this.radioButtonDark = radioButtonDark;
    this.radioButtonLight = radioButtonLight;
    this.radioButtonSystem = radioButtonSystem;
    this.radioGroupTheme = radioGroupTheme;
    this.switchNotification = switchNotification;
    this.textInputAiModel = textInputAiModel;
    this.textViewAbout = textViewAbout;
    this.textViewAiModel = textViewAiModel;
    this.textViewAiModelDescription = textViewAiModelDescription;
    this.textViewAppInfo = textViewAppInfo;
    this.textViewErrorModels = textViewErrorModels;
    this.textViewNotifications = textViewNotifications;
    this.textViewNotificationsDescription = textViewNotificationsDescription;
    this.textViewSettingsTitle = textViewSettingsTitle;
    this.textViewTheme = textViewTheme;
    this.textViewThemeDescription = textViewThemeDescription;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.auto_complete_ai_model;
      AutoCompleteTextView autoCompleteAiModel = ViewBindings.findChildViewById(rootView, id);
      if (autoCompleteAiModel == null) {
        break missingId;
      }

      id = R.id.button_retry_models;
      MaterialButton buttonRetryModels = ViewBindings.findChildViewById(rootView, id);
      if (buttonRetryModels == null) {
        break missingId;
      }

      id = R.id.card_about;
      MaterialCardView cardAbout = ViewBindings.findChildViewById(rootView, id);
      if (cardAbout == null) {
        break missingId;
      }

      id = R.id.card_ai_model;
      MaterialCardView cardAiModel = ViewBindings.findChildViewById(rootView, id);
      if (cardAiModel == null) {
        break missingId;
      }

      id = R.id.card_notifications;
      MaterialCardView cardNotifications = ViewBindings.findChildViewById(rootView, id);
      if (cardNotifications == null) {
        break missingId;
      }

      id = R.id.card_theme;
      MaterialCardView cardTheme = ViewBindings.findChildViewById(rootView, id);
      if (cardTheme == null) {
        break missingId;
      }

      id = R.id.image_view_logo;
      ImageView imageViewLogo = ViewBindings.findChildViewById(rootView, id);
      if (imageViewLogo == null) {
        break missingId;
      }

      id = R.id.progress_bar_models;
      ProgressBar progressBarModels = ViewBindings.findChildViewById(rootView, id);
      if (progressBarModels == null) {
        break missingId;
      }

      id = R.id.radio_button_dark;
      MaterialRadioButton radioButtonDark = ViewBindings.findChildViewById(rootView, id);
      if (radioButtonDark == null) {
        break missingId;
      }

      id = R.id.radio_button_light;
      MaterialRadioButton radioButtonLight = ViewBindings.findChildViewById(rootView, id);
      if (radioButtonLight == null) {
        break missingId;
      }

      id = R.id.radio_button_system;
      MaterialRadioButton radioButtonSystem = ViewBindings.findChildViewById(rootView, id);
      if (radioButtonSystem == null) {
        break missingId;
      }

      id = R.id.radio_group_theme;
      RadioGroup radioGroupTheme = ViewBindings.findChildViewById(rootView, id);
      if (radioGroupTheme == null) {
        break missingId;
      }

      id = R.id.switch_notification;
      SwitchMaterial switchNotification = ViewBindings.findChildViewById(rootView, id);
      if (switchNotification == null) {
        break missingId;
      }

      id = R.id.text_input_ai_model;
      TextInputLayout textInputAiModel = ViewBindings.findChildViewById(rootView, id);
      if (textInputAiModel == null) {
        break missingId;
      }

      id = R.id.text_view_about;
      TextView textViewAbout = ViewBindings.findChildViewById(rootView, id);
      if (textViewAbout == null) {
        break missingId;
      }

      id = R.id.text_view_ai_model;
      TextView textViewAiModel = ViewBindings.findChildViewById(rootView, id);
      if (textViewAiModel == null) {
        break missingId;
      }

      id = R.id.text_view_ai_model_description;
      TextView textViewAiModelDescription = ViewBindings.findChildViewById(rootView, id);
      if (textViewAiModelDescription == null) {
        break missingId;
      }

      id = R.id.text_view_app_info;
      TextView textViewAppInfo = ViewBindings.findChildViewById(rootView, id);
      if (textViewAppInfo == null) {
        break missingId;
      }

      id = R.id.text_view_error_models;
      TextView textViewErrorModels = ViewBindings.findChildViewById(rootView, id);
      if (textViewErrorModels == null) {
        break missingId;
      }

      id = R.id.text_view_notifications;
      TextView textViewNotifications = ViewBindings.findChildViewById(rootView, id);
      if (textViewNotifications == null) {
        break missingId;
      }

      id = R.id.text_view_notifications_description;
      TextView textViewNotificationsDescription = ViewBindings.findChildViewById(rootView, id);
      if (textViewNotificationsDescription == null) {
        break missingId;
      }

      id = R.id.text_view_settings_title;
      TextView textViewSettingsTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewSettingsTitle == null) {
        break missingId;
      }

      id = R.id.text_view_theme;
      TextView textViewTheme = ViewBindings.findChildViewById(rootView, id);
      if (textViewTheme == null) {
        break missingId;
      }

      id = R.id.text_view_theme_description;
      TextView textViewThemeDescription = ViewBindings.findChildViewById(rootView, id);
      if (textViewThemeDescription == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((NestedScrollView) rootView, autoCompleteAiModel,
          buttonRetryModels, cardAbout, cardAiModel, cardNotifications, cardTheme, imageViewLogo,
          progressBarModels, radioButtonDark, radioButtonLight, radioButtonSystem, radioGroupTheme,
          switchNotification, textInputAiModel, textViewAbout, textViewAiModel,
          textViewAiModelDescription, textViewAppInfo, textViewErrorModels, textViewNotifications,
          textViewNotificationsDescription, textViewSettingsTitle, textViewTheme,
          textViewThemeDescription);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
