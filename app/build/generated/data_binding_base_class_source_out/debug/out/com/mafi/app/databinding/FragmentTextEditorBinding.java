// Generated by view binder compiler. Do not edit!
package com.mafi.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.mafi.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTextEditorBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton buttonAccept;

  @NonNull
  public final MaterialButton buttonClassify;

  @NonNull
  public final MaterialButton buttonExpand;

  @NonNull
  public final MaterialButton buttonQuestion;

  @NonNull
  public final MaterialButton buttonReject;

  @NonNull
  public final MaterialButton buttonSummarize;

  @NonNull
  public final CardView cardAiResult;

  @NonNull
  public final MaterialCardView cardEditor;

  @NonNull
  public final EditText editTextContent;

  @NonNull
  public final LinearLayout linearButtons;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView textViewAiContent;

  @NonNull
  public final TextView textViewAiTitle;

  @NonNull
  public final TextView textViewTitle;

  @NonNull
  public final View viewDimBackground;

  private FragmentTextEditorBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton buttonAccept, @NonNull MaterialButton buttonClassify,
      @NonNull MaterialButton buttonExpand, @NonNull MaterialButton buttonQuestion,
      @NonNull MaterialButton buttonReject, @NonNull MaterialButton buttonSummarize,
      @NonNull CardView cardAiResult, @NonNull MaterialCardView cardEditor,
      @NonNull EditText editTextContent, @NonNull LinearLayout linearButtons,
      @NonNull ProgressBar progressBar, @NonNull TextView textViewAiContent,
      @NonNull TextView textViewAiTitle, @NonNull TextView textViewTitle,
      @NonNull View viewDimBackground) {
    this.rootView = rootView;
    this.buttonAccept = buttonAccept;
    this.buttonClassify = buttonClassify;
    this.buttonExpand = buttonExpand;
    this.buttonQuestion = buttonQuestion;
    this.buttonReject = buttonReject;
    this.buttonSummarize = buttonSummarize;
    this.cardAiResult = cardAiResult;
    this.cardEditor = cardEditor;
    this.editTextContent = editTextContent;
    this.linearButtons = linearButtons;
    this.progressBar = progressBar;
    this.textViewAiContent = textViewAiContent;
    this.textViewAiTitle = textViewAiTitle;
    this.textViewTitle = textViewTitle;
    this.viewDimBackground = viewDimBackground;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTextEditorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTextEditorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_text_editor, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTextEditorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_accept;
      MaterialButton buttonAccept = ViewBindings.findChildViewById(rootView, id);
      if (buttonAccept == null) {
        break missingId;
      }

      id = R.id.button_classify;
      MaterialButton buttonClassify = ViewBindings.findChildViewById(rootView, id);
      if (buttonClassify == null) {
        break missingId;
      }

      id = R.id.button_expand;
      MaterialButton buttonExpand = ViewBindings.findChildViewById(rootView, id);
      if (buttonExpand == null) {
        break missingId;
      }

      id = R.id.button_question;
      MaterialButton buttonQuestion = ViewBindings.findChildViewById(rootView, id);
      if (buttonQuestion == null) {
        break missingId;
      }

      id = R.id.button_reject;
      MaterialButton buttonReject = ViewBindings.findChildViewById(rootView, id);
      if (buttonReject == null) {
        break missingId;
      }

      id = R.id.button_summarize;
      MaterialButton buttonSummarize = ViewBindings.findChildViewById(rootView, id);
      if (buttonSummarize == null) {
        break missingId;
      }

      id = R.id.card_ai_result;
      CardView cardAiResult = ViewBindings.findChildViewById(rootView, id);
      if (cardAiResult == null) {
        break missingId;
      }

      id = R.id.card_editor;
      MaterialCardView cardEditor = ViewBindings.findChildViewById(rootView, id);
      if (cardEditor == null) {
        break missingId;
      }

      id = R.id.edit_text_content;
      EditText editTextContent = ViewBindings.findChildViewById(rootView, id);
      if (editTextContent == null) {
        break missingId;
      }

      id = R.id.linear_buttons;
      LinearLayout linearButtons = ViewBindings.findChildViewById(rootView, id);
      if (linearButtons == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.text_view_ai_content;
      TextView textViewAiContent = ViewBindings.findChildViewById(rootView, id);
      if (textViewAiContent == null) {
        break missingId;
      }

      id = R.id.text_view_ai_title;
      TextView textViewAiTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewAiTitle == null) {
        break missingId;
      }

      id = R.id.text_view_title;
      TextView textViewTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewTitle == null) {
        break missingId;
      }

      id = R.id.view_dim_background;
      View viewDimBackground = ViewBindings.findChildViewById(rootView, id);
      if (viewDimBackground == null) {
        break missingId;
      }

      return new FragmentTextEditorBinding((ConstraintLayout) rootView, buttonAccept,
          buttonClassify, buttonExpand, buttonQuestion, buttonReject, buttonSummarize, cardAiResult,
          cardEditor, editTextContent, linearButtons, progressBar, textViewAiContent,
          textViewAiTitle, textViewTitle, viewDimBackground);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
